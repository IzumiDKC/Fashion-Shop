@model IEnumerable<FashionShopDemo.Models.Product>

@{
    ViewData["Title"] = "Trang Chủ";
    int numOfQuantity = 1;
}
<link rel="stylesheet" href="~/css/Home.css">
<body class="product-display-section">

    <section class="py-5 ">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title" style="text-align:center">Bộ Lọc</h5>
                            <form id="filterForm" method="post" action="@Url.Action("FilterProducts", "Home")">
                                <div class="mb-3">
                                    <label for="productNameFilter" class="form-label">Tên sản phẩm</label>
                                    <input type="text" id="productNameFilter" name="productName" class="form-control" placeholder="Tìm kiếm theo tên sản phẩm">
                                    <div id="suggestions"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="categoryFilter" class="form-label">Loại quần áo</label>
                                    <select class="form-select" id="categoryFilter" name="categoryId">
                                        <option value="">Tất cả</option>
                                        @if (ViewBag.Categories != null)
                                        {
                                            foreach (var category in ViewBag.Categories)
                                            {
                                                <option value="@category.Id">@category.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="brandFilter" class="form-label">Thương hiệu</label>
                                    <select class="form-select" id="brandFilter" name="brandId">
                                        <option value="">Tất cả</option>
                                        @if (ViewBag.Brands != null)
                                        {
                                            @foreach (var brand in ViewBag.Brands)
                                            {
                                                <option value="@brand.Id">@brand.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="priceRangeFilter" class="form-label">Khoảng giá</label>
                                    <select class="form-select" id="priceRangeFilter" name="priceRange">
                                        <option value="">Tất cả</option>
                                        <option value="1-99">1.000 - 99.000 Vnđ</option>
                                        <option value="100-299">100.000 - 299.000 Vnđ</option>
                                        <option value="300-499">300.000 - 499.000 Vnđ</option>
                                        <option value="500-999">500.000 - 999.000 Vnđ</option>
                                        <option value="1000-9999">1.000.000+ Vnđ</option>
                                    </select>
                                </div>
                                <button type="submit" class="btn btn-primary">Áp dụng</button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <section class="banner-section">
                        <div id="bannerCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <img src="/images/bn1.jpg" class="d-block w-100" alt="First slide">
                                </div>
                                <div class="carousel-item">
                                    <img src="/images/bn2.jpg" class="d-block w-100" alt="Second slide">
                                </div>
                                <div class="carousel-item">
                                    <img src="/images/bn3.jpg" class="d-block w-100" alt="Third slide">
                                </div>
                                <!-- hình ảnh khác -->
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#bannerCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#bannerCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </section>
                </div>
            </div>

            <section class="product-section">
                @if (Model.Any(p => p.IsHot))
                {
                    <div class="flash-sale">
                        <h2>Flash Sale</h2>
                    </div>

                    <div class="row row-cols-1 row-cols-md-4 g-4">
                        @foreach (var product in Model.Where(p => p.IsHot))
                        {
                            <div class="col">
                                <div class="card h-100 product-card">
                                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                                    <div class="card-body">
                                        <h5 class="card-title">@product.Name</h5>
                                        @if (product.HotStartDate.HasValue && product.HotEndDate.HasValue)
                                        {
                                            var currentTime = DateTime.Now;
                                            var saleEndTime = product.HotEndDate.Value;
                                            var saleStartTime = product.HotStartDate.Value;

                                            if (currentTime > saleEndTime)
                                            {
                                                <div class="sale-expired">Đã Kết Thúc</div>
                                            }
                                            else
                                            {
                                                <div class="sale-dates">
                                                    <div id="countdown-@product.Id" class="countdown-timer" data-end-time="@saleEndTime.ToString("yyyy-MM-ddTHH:mm:ss")">
                                                        Kết Thúc Lúc <span id="time-remaining-@product.Id"></span>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        <script>
                                            document.addEventListener("DOMContentLoaded", function () {
                                                var countdownElements = document.querySelectorAll(".countdown-timer");

                                                countdownElements.forEach(function (element) {
                                                    var endTime = new Date(element.getAttribute("data-end-time")).getTime();
                                                    var productId = element.id.split('-')[1];
                                                    var timerElement = document.getElementById("time-remaining-" + productId);

                                                    function updateCountdown() {
                                                        var now = new Date().getTime();
                                                        var timeRemaining = endTime - now;

                                                        if (timeRemaining < 0) {
                                                            timerElement.innerHTML = "Thời gian sale đã kết thúc";
                                                            return;
                                                        }

                                                        var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
                                                        var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                                                        var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
                                                        var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

                                                        timerElement.innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
                                                    }

                                                    if (timerElement) {
                                                        setInterval(updateCountdown, 1000);
                                                        updateCountdown();
                                                    } else {
                                                        console.error("Timer element not found for product id:", productId);
                                                    }
                                                });
                                            });
                                        </script>
                                        @if (product.PromotionPrice.HasValue)
                                        {
                                            <div class="card-footer">
                                                <div class="price-buttons d-flex justify-content-between align-items-center">
                                                    <div class="price price-changing-color" id="price-@product.Id">
                                                        <p class="mb-0 pricebefore">Giá: <s>@product.Price.ToString("#.000") Vnđ</s></p>
                                                    </div>
                                                    <div>
                                                        <p class="promotion">Giảm giá: @((int)product.PromotionPrice.Value)%</p>
                                                        @{
                                                            var discountPercentage = (decimal)product.PromotionPrice.Value;
                                                            var discountedPrice = product.Price - (product.Price * (discountPercentage / 100));
                                                        }
                                                        <p class="mb-0 priceafter">Giá Ưu Đãi: <strong>@discountedPrice.ToString("#.000") Vnđ</strong></p>
                                                    </div>
                                                    <div class="buttons">
                                                        <a href="@Url.Action("Display", "Product", new { id = product.Id })" class="btn btn-secondary btn-view-details">Chi tiết</a>
                                                        <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-productId="@product.Id"
                                                           asp-route-quantity="@numOfQuantity" class="btn btn-dark btn-add-to-cart">
                                                            <i class="bi-cart-fill me-1"></i> Thêm vào giỏ
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </section>

            <<br />
            <div class="row row-cols-1 row-cols-md-5 g-4">
                @foreach (var item in Model)
                {
                    <div class="col">
                        <div class="card h-100 product-card">
                            <img src="@item.ImageUrl" class="card-img-top fashion-image" alt="@item.Name">
                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                            </div>
                            <div class="card-footer">
                                <div class="price-buttons d-flex justify-content-between align-items-center">
                                    <div class="price price-changing-color" id="price-@item.Id">
                                        <p class="mb-0" font-weight>Giá: @item.Price.ToString("#.000") Vnđ</p>
                                    </div>
                                    <div class="buttons">
                                        <a href="@Url.Action("Display", "Product", new { id = item.Id })" class="btn btn-secondary btn-view-details">Chi tiết</a>
                                        <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-productId="@item.Id"
                                           asp-route-quantity="@numOfQuantity" class="btn btn-dark btn-add-to-cart">
                                            <i class="bi-cart-fill me-1"></i> Thêm vào giỏ
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</body>

<style>
    .pricebefore {
        color: gray;
        text-decoration: line-through;
    }

    .promotion {
        font-weight: bold;
        color: red;
        text-align: center;
    }

    priceafter {
        font-weight: bold;
        color: green;
        text-align: center;
        font-size: 1.2em;
    }


    .flash-sale {
        text-align: center;
        color: red;
        /* border: 2px solid blue; */
        background-color: #fdcdbb;
    }

    .banner-section {
        width: 80%;
        margin: 50px auto;
        position: relative;
    }

    .carousel-inner {
        border-radius: 10px;
        overflow: hidden;
    }

    .carousel-item img {
        width: 100%;
        height: auto;
    }

    .col-md-3 {
        height: 100%;
        position: fixed;
        bottom: 0;
        width: 20%;
        background-color: white;
        padding: 20px;
        box-shadow: 0px -5px 5px rgba(0, 0, 0, 0.1);
        z-index: 999;
    }

    .carousel-item img {
        width: 80%;
        height: auto;
        margin: 0 auto;
        display: block;
    }

    .carousel-control-prev, .carousel-control-next {
        width: 5%;
        background: none;
        border: none;
        outline: none;
    }

    .carousel-control-prev-icon, .carousel-control-next-icon {
        background-image: <img src="https://imgur.com/aQOS7lM" alt="Alternate Text"/> width: 40px;
        height: 40px;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
    }

    .carousel-control-prev-icon {
        left: 0;
    }

    .carousel-control-next-icon {
        right: 0;
    }

    .carousel-control-prev:hover, .carousel-control-next:hover {
        background-color: rgba(0, 0, 0, 0.7);
    }

    .product-display-section {
        background-image: url("https://i.imgur.com/60MPmZP.jpg");
        background-size: cover;
        background-position: center;
        padding-top: 50px;
        padding-bottom: 50px;
    }

    .search-form {
        display: flex;
        justify-content: center;
    }

    .input-group {
        display: flex;
        align-items: center;
        max-width: 300px;
        width: 100%;
    }

    .form-control {
        flex: 1;
        padding: 10px;
        border: 2px solid #ccc;
        border-radius: 20px 0 0 20px;
        outline: none;
        transition: border-color 0.3s;
    }

        .form-control:focus {
            border-color: #007bff;
        }

    .btn-primary {
        background-color: #007bff;
        border: none;
        border-radius: 0 20px 20px 0;
        color: #fff;
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .bi-search {
        font-size: 1.2rem;
    }

    .btn-search-category {
        font-size: 14px;
        padding: 8px 16px;
        border: 2px solid #007bff;
        border-radius: 20px;
        color: #007bff;
        background-color: transparent;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    #productNameFilter {
        border-radius: 20px;
    }

    .btn-search-category:hover {
        background-color: #007bff;
        color: #fff;
        text-decoration: none;
    }

    .col-md-3 {
        height: 100%;
        position: sticky;
        top: 0;
    }




    .sale-dates {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f9f9f9;
        padding: 20px;
        border: 2px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
        max-width: 500px;
    }

    .countdown-timer {
        font-family: 'Arial', sans-serif;
        color: #333;
        text-align: center;
        font-size: 1.5em;
        font-weight: bold;
    }

        .countdown-timer span {
            color: #e74c3c;
        }

        .countdown-timer::before {
            content: '🕒';
            margin-right: 10px;
            color: #3498db;
        }

        .countdown-timer::after {
            content: '';
            margin-right: 10px;
            color: #3498db;
        }

    .sale-expired {
        font-family: 'Arial', sans-serif;
        display: flex;
        font-size: 1.5em;
        justify-content: center;
        align-items: center;
        background-color: #f9f9f9;
        padding: 20px;
        border: 2px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
        max-width: 500px;
        margin-right: 10px;
        color: red;
        font-weight: bold;
    }


    .product-card img {
        object-fit: cover; 
        height: 200px; 
    }

    .product-card .card {
        height: auto; 
    }


    .product-card {
        transition: transform 0.3s ease-in-out;
    }

        .product-card:hover {
            transform: scale(1.05);
        }

    .price-buttons {
        flex-direction: column;
    }

    .price, .buttons {
        width: 100%;
        text-align: center;
    }

        .buttons .btn {
            margin-top: 5px;
        }
</style>

<script>
        $('#bannerCarousel').carousel({
            interval: 3000
        });

        $('#filterForm').submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (data) {
                    $('.row.row-cols-1.row-cols-md-5.g-4').html(data);
                }
            });
        });

    $(document).ready(function () {
        $('#productNameFilter').keyup(function () {
            var query = $(this).val();
            if (query.length >= 3) { // Chỉ gửi yêu cầu gợi ý khi nhập ít nhất 3 ký tự
                $.ajax({
                    type: 'GET',
                    url: '/Home/Search', // Đường dẫn đến action xử lý yêu cầu gợi ý tìm kiếm
                    data: { query: query },
                    success: function (data) {
                        // Hiển thị kết quả gợi ý tìm kiếm ở đây (ví dụ: dropdown list)
                        $('#suggestions').empty(); // Xóa bất kỳ kết quả trước đó nào
                        $.each(data, function (index, item) {
                            $('#suggestions').append('<div>' + item.name + '</div>'); // Hiển thị tên sản phẩm trong một danh sách
                        });
                    },
                    error: function () {
                        console.error('Đã xảy ra lỗi khi gửi yêu cầu gợi ý tìm kiếm.');
                    }
                });
            }
        });
    });



        document.addEventListener("DOMContentLoaded", function () {
            var countdownElements = document.querySelectorAll(".countdown-timer");

            countdownElements.forEach(function (element) {
                var endTime = new Date(element.getAttribute("data-end-time")).getTime();
                var productId = element.id.split('-')[1];
                var timerElement = document.getElementById("time-remaining-" + productId);

                function updateCountdown() {
                    var now = new Date().getTime();
                    var timeRemaining = endTime - now;

                    if (timeRemaining < 0) {
                        timerElement.innerHTML = "Thời gian sale đã kết thúc";
                        return;
                    }

                    var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
                    var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

                    timerElement.innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
                }

                if (timerElement) {
                    setInterval(updateCountdown, 1000);
                    updateCountdown();
                    console.error("Timer element not found for product id:", productId);
                }
            });
        });
    });
</script>
